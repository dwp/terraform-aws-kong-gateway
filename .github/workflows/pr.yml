name: PR

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
env:
  TERRAFORM_VERSION: 0.14.7

jobs:
  format:
    name: Terraform-Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive
        continue-on-error: true

  check-aws-credentials:
    name: Test AWS Credentials
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install AWS CLI
        run: |
          python -m pip install --upgrade pip
          pip install awscli
      - name: Test AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACTIONS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ACTIONS_SECRET_ACCESS_KEY }}
        run: aws ec2 describe-availability-zones --region us-east-1

  test:
    name: Kitchen-Terraform
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    needs: check-aws-credentials
    env:
      GEMFILE_DIR: .
      AWS_ACCESS_KEY_ID: ${{ secrets.ACTIONS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.ACTIONS_SECRET_ACCESS_KEY }}
      TF_VAR_region: eu-west-1
      TF_VAR_vpc_cidr_block: "10.0.0.0/16"
      TF_VAR_kong_database_password: ${{ secrets.KONG_DATABASE_PASSWORD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install AWS CLI
        run: |
          python -m pip install --upgrade pip
          pip install awscli
      - name: Kitchen Test hybrid-external-database
        uses: dwp/github-action-kitchen-terraform@0.14.7
        with:
          kitchen-command: test hybrid-external-database --destroy=always
          aws-account-number: ${{ secrets.AWS_ACCOUNT }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACTIONS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ACTIONS_SECRET_ACCESS_KEY }}
          TF_VAR_region: eu-west-1
          TF_VAR_environment: GHA-${{ env.GITHUB_RUN_NUMBER }}
          TF_VAR_vpc_cidr_block: "10.0.0.0/16"
          TF_VAR_kong_database_password: ${{ secrets.KONG_DATABASE_PASSWORD }}
      - name: Deactivate AWS Credentials
        if: ${{ always() }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACTIONS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ACTIONS_SECRET_ACCESS_KEY }}
        run: aws iam update-access-key --access-key-id ${{ secrets.ACTIONS_ACCESS_KEY_ID }} --status Inactive
